name: Build and Publish

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '20.x'                # set this to the node version to use
  ARTIFACT_NAME: 'terminal-deploy'
  RELEASE_NAME: 'Release Terminal'

defaults:
  run:
    shell: 'bash'

permissions: write-all

jobs:
  build-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Remove lock files
        run: |
          sudo rm package-lock.json -f
          sudo rm yarn.lock -f

      - name: Install dependencies
        run: npm install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    
      - name: Install fakeroot and dpkg
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot dpkg
        
      - name: Build for x64
        env:
          VITE_API_URL: "http://10.205.0.2:3011"
        run: npm run make -- --targets=@electron-forge/maker-deb
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: terminal-de-consulta-x64
          path: out/make

  build-arm64:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Remove lock files
        run: |
          sudo rm package-lock.json -f
          sudo rm yarn.lock -f

      - name: Install dependencies
        run: npm install
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Install fakeroot and dpkg
        run: |
          sudo apt-get update
          sudo apt-get install fakeroot dpkg
      
      - name: Build for arm64
        env:
          VITE_API_URL: "http://10.205.0.2:3011"
        run: npm run make -- --targets=@electron-forge/maker-deb --arch=arm64
          
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: terminal-de-consulta-arm64
          path: out/make
  
  create-tag:
    runs-on: ubuntu-latest
    needs: [build-x64, build-arm64]
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get package version
        id: version
        run: echo "version=$(node -p -e 'require("./package.json").version')" >> $GITHUB_OUTPUT
      
  publish:
    runs-on: ubuntu-latest
    needs: [create-tag]
    steps:
      - name: Download x64 artifact
        uses: actions/download-artifact@v2
        with:
          name: terminal-de-consulta-x64
          path: out/make/x64

      - name: Download arm64 artifact
        uses: actions/download-artifact@v2
        with:
          name: terminal-de-consulta-arm64
          path: out/make/arm64

      - name: Generate changelog
        uses: release-drafter/release-drafter@v5
        with:
          config-name: .github/release-drafter.yml

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.create-tag.outputs.version }}
          files: |
            out/make/x64/**
            out/make/arm64/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
